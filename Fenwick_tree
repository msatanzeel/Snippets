class Fenwick
{

public:
    int n;
    vector<int> v;

    Fenwick()
    {
        n = 0;
        v.clear();
    }

    Fenwick(int n)
    {
        this->n = n;
        v.clear();
        v.resize(n + 1);
    }

    void aggregate(int ind, int val)
    {
        while (ind <= n)
        {
            v[ind] += val;
            ind += (ind & (-ind));
        }
    }

    int query(int ind)
    {
        int ans = 0;
        while (ind > 0)
        {
            ans += v[ind];
            ind -= (ind & (-ind));
        }
        return ans;
    }

    int query(int l, int r)
    {
        return query(r, l - 1);
    }

    int findKthSmall(int k)
    {
        int sum = 0;
        int pos = 0;
        
        for(int i=(int)log2(n); i>=0; i--)
        {
            if(pos + (1 << i) <= n and sum + v[pos + (1 << i)] < k)
            {
                sum += v[pos + (1 << i)];
                pos += (1 << i);
            }
        }

        return pos + 1;
    }
};
